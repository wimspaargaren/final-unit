// Code generated by finalunit dev, visit us at https://github.com/wimspaargaren/final-unit
package basic

import (
	"testing"

	"github.com/stretchr/testify/suite"
)

type BasicSuite struct {
	suite.Suite
}

func (s *BasicSuite) TestFooBar0() {
	pointerF := Foo{}
	f := &pointerF
	x := -87

	fyNGe := f.Bar(x)

	s.EqualValues(string(`x is a negative integer`), fyNGe)

	_ = fyNGe
}

func (s *BasicSuite) TestFooBar1() {
	pointerF := Foo{}
	f := &pointerF
	x := 84

	dbtZV := f.Bar(x)

	s.EqualValues(string(`x not recognized: 84`), dbtZV)

	_ = dbtZV
}

func (s *BasicSuite) TestFooBar2() {
	pointerF := Foo{}
	f := &pointerF
	x := 1

	nBsBX := f.Bar(x)

	s.EqualValues(string(`x between zero and 10`), nBsBX)

	_ = nBsBX
}

func (s *BasicSuite) TestFooBar3() {
	pointerF := Foo{}
	f := &pointerF
	x := 40

	nZhNm := f.Bar(x)

	s.EqualValues(string(`x between 30 and 50`), nZhNm)

	_ = nZhNm
}

func (s *BasicSuite) TestFooBar4() {
	pointerF := Foo{}
	f := &pointerF
	x := 32

	lhVaY := f.Bar(x)

	s.EqualValues(string(`x between 30 and 50`), lhVaY)

	_ = lhVaY
}

func (s *BasicSuite) TestFooBar5() {
	pointerF := Foo{}
	f := &pointerF
	x := -51

	lrnKk := f.Bar(x)

	s.EqualValues(string(`x is a negative integer`), lrnKk)

	_ = lrnKk
}

func (s *BasicSuite) TestFooBar6() {
	pointerF := Foo{}
	f := &pointerF
	x := 15

	tqjfx := f.Bar(x)

	s.EqualValues(string(`x between 10 and 20`), tqjfx)

	_ = tqjfx
}

func (s *BasicSuite) TestFooBar7() {
	pointerF := Foo{}
	f := &pointerF
	x := 88

	zgzvJ := f.Bar(x)

	s.EqualValues(string(`x not recognized: 88`), zgzvJ)

	_ = zgzvJ
}

func (s *BasicSuite) TestFooBar8() {
	pointerF := Foo{}
	f := &pointerF
	x := -2

	icPjU := f.Bar(x)

	s.EqualValues(string(`x is a negative integer`), icPjU)

	_ = icPjU
}

func (s *BasicSuite) TestFooBar9() {
	pointerF := Foo{}
	f := &pointerF
	x := -69

	cpXHV := f.Bar(x)

	s.EqualValues(string(`x is a negative integer`), cpXHV)

	_ = cpXHV
}

func TestBasicSuite(t *testing.T) {
	suite.Run(t, new(BasicSuite))
}
